 
"""
DESCRIPTION

AUTHOR

CREATION DATE

    2019-04-15 @ BSRF 1W1A

COPYRIGHT

VERSION

DEPENDENCIES

    None

CHANGE LOG

    2019-04-15
    
    - first version
    
    TODO list:
    - att_help
    - global variable
    - att_setup
"""

#================================================================
# Global variable definitions
#================================================================

global ATT_DEBUG
       ATT_DEBUG = 1

#================================================================
# Macro command definitions
#================================================================

#----------------------------------------------------------------
def flt '
        """
        Put in filters according to <mask>
        
        Usage::
        
           > flt <mask>
           
        """
        
        local i, mask, pv_name_default, pv_name
        local _flt_timer1, _flt_timer2, _flt_time

        if ($# != 1) {
                print "Usage: filter mask"
                exit
        }

        mask = $1
        mask = int(mask)

        if (mask < 0 || mask > 15) {
                print "Error: Invalid filter number"
                exit
        }
        
        _flt_timer1 = time()

        pv_name_default = "1w1a:InsertFil"
        for (i = 4; i > 0; i--) {
                pv_name = sprintf("%s%d", pv_name_default, i)
                if (ATT_DEBUG)
                	print(pv_name)
                epics_put(pv_name, "Insert")
                sleep(0.5)
        }

        pv_name_default = "1w1a:RemoveFil"
        for(i = 4; i > 0; i--) {
                if (!(mask & pow(2, i))) {
                	pv_name = sprintf("%s%d", pv_name_default, i)
                	if (ATT_DEBUG)
	                	print(pv_name)
                	epics_put(pv_name, "Remove")
                	sleep(0.5)
                }
        }

        _flt_timer2 = time()
        _flt_time = _flt_timer2 - _flt_timer1
        printf("Filter action period: %.2f", _flt_time)

'

def flt_pos '
        """
        Print current filter status.
        
        Usage::
        
           > flt_pos
           
        """
        
        local pv_name, fil_pos, r_value, i
              pv_name = "1w1a:InqFilPos"
              
        epics_put(pv_name, 0)
        sleep(0.5)
        r_value = epics_get(pv_name)

        flt_pos = 0
        for (i = 0; i < 4; i++) {
        	j = r_value & 1
        	fil_pos += j * pow(2, 4-1-i)
        	r_value = r_value >> 1
        }
        
        printf("att: %d", fil_pos)
'

def att '
        """
        Print current filter status, or put in filters according 
        to <mask>.
        
        Usage::
        
           > att <mask>
           > att
           
        Arguments:
           :mask: The binary mask specifying which filters wil be 
           inserted.
           
        """

        flt_pos

        if ($# == 1) {
              flt $1
              printf("New - ")
              flt_pos
        }
        else {
              print("Error: Invalid arguments")
              print("Usage: att mask")
              print("Usage: att")
        }
'

def flt_fast '

		"""

		"""

	    local i, j, k, mask, pv_name_in, pv_name_out, pv_name
	    local r_value, fil_pos
        local _flt_timer1, _flt_timer2, _flt_time

        pv_name = "1w1a:InqFilPos"
              
        epics_put(pv_name, 0)
        sleep(0.5)
        r_value = epics_get(pv_name)

        flt_pos = 0
        for (i = 0; i < 4; i++) {
        	j = r_value & 1
        	fil_pos += j * pow(2, 4-1-i)
        	r_value = r_value >> 1
        }

        if ($# != 1) {
                print "Usage: filter mask"
                exit
        }

        mask = $1
        mask = int(mask)

        if (mask < 0 || mask > 15) {
                print "Error: Invalid filter number"
                exit
        }
        
        _flt_timer1 = time()

        pv_name_in = "1w1a:InsertFil"
        pv_name_out = "1w1a:RemoveFil"

        for (i = 0; i < 4; i++) {
        		j = mask & 1
        		k = fil_pos & 1

        		if (j != k) {
        			if (j > 0) 
        				pv_name = sprintf("%s%d", pv_name_in, (i+1))
        			else
        				pv_name = sprintf("%s%d", pv_name_out, (i+1))

        			if (ATT_DEBUG)
                		print(pv_name)
                	epics_put(pv_name, 1)
                	sleep(0.5)
        		}
                
                mask = mask >> 1
                fil_pos = fil_pos >> 1
        }

        _flt_timer2 = time()
        _flt_time = _flt_timer2 - _flt_timer1
        printf("Filter action period: %.2f", _flt_time)
'