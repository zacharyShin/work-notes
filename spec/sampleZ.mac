global sampleZ_MAX_COUNT
global sampleZ_COUNT
global sampleZ_PRS_COUNT
global sampleZ_PRECISION

def _sampleZ_count_isHalf() '{
        local lo_lmt, hi_lmt, max_count, max_count_bit, half_count, half_count_bit
        local i,j,rtn

        max_count = sampleZ_MAX_COUNT
        half_count = max_count >> 1

        max_count_bit = 1 + int(log10(max_count))
        half_count_bit = 1 + int(log10(half_count))

		"""
        print(sprintf("max_count is %d", max_count))
        print(sprintf("max_count_bit is %d", max_count_bit))
        print(sprintf("half_count is %d", half_count))
        print(sprintf("half_count_bit is %d", half_count_bit))
		"""

        j = half_count_bit - 2
        lo_lmt = int(half_count/exp10(j))*exp10(j)
        hi_lmt = lo_lmt + exp10(j)

		"""
        print(sprintf("lo_lmt is %d", lo_lmt))
        print(sprintf("hi_lmt is %d", hi_lmt))
        """

        if (sampleZ_COUNT < lo_lmt) {
                rtn = -1
        } else if (sampleZ_COUNT <= hi_lmt) {
                rtn = 0        
        } else {
                rtn = 1
        }
        return rtn
}'

def _sampleZ_ct '
        waitmove
        count_em
        waitcount
        sampleZ_PRS_COUNT=sampleZ_COUNT
        
        # ÉèÖÃ sampleZ_COUNT ÊÇÄÄ¸ö counter
        sampleZ_COUNT=S[]
'
"""
def _sampleZ_mvdown '
'

def _sampleZ_mvup '
'
"""
def _sampleZ_count_isEqual() {
       local prs_count, prt_count, count_bit, ct_precision
       
       prs_count = sampleZ_PRS_COUNT
       prt_count = sampleZ_COUNT
       ct_precision = sampleZ_PRECISION
       
       count_bit = 1 + int(log10(prt_count))
       
       prs_count = int(prs_count/exp10(count_bit-2))*exp10(count_bit-2)
       prt_count = int(prt_count/exp10(count_bit-2))*exp10(count_bit-2)
       
       if (fabs(prs_count-prt_count) <= sampleZ_PRECISION * exp10(count_bit-2)) {
              rtn = 1
       } else {
              rtn = 0
       }
       
       return rtn
}
"""
def sampleZ_assign '
	   while(1) {
              _sampleZ_ct
              if ( sampleZ_COUNT == 0) {
                     _sample_mvdown; continue;
              }
              else {
                     break
              }
	   }
	   
	   while(1) {
	          _sampleZ_mvdown
	          _sampleZ_ct
	          if ( _sampleZ_count_ifEqual()) {
	                 break
	          }
	          else {
	                 continue
	          }
	   }
	   
	   while (1) {
	          sampleZ_mvup
	          sampleZ_count
	          if (_sampleZ_count_isHalf()) {
	                 break
	          }
	          else {
	                 continue
	          }
	   }
'

def sampleZ_config'
'
"""
