global sampleZ_MAX_COUNT
#       sampleZ_MAX_COUNT=7358
       
global sampleZ_COUNT
#       sampleZ_COUNT=7358
       
global sampleZ_PRS_COUNT
#       sampleZ_PRS_COUNT=7034
       
global sampleZ_PRECISION
       sampleZ_PRECISION=2

global sampleZ_STEP
       sampleZ_STEP=0.1
global sampleZ_STEP_MASK
       sampleZ_STEP_MASK=0
       
global sampleZ_mne
       sampleZ_mne = "zz"

global sampleZ_DEBUG
       sampleZ_DEBUG = 1


def _sampleZ_count_isHalf() '{
        local lo_lmt, hi_lmt, max_count, max_count_bit, half_count, half_count_bit
        local i,j,rtn

        max_count = sampleZ_MAX_COUNT
        half_count = max_count >> 1

        max_count_bit = 1 + int(log10(max_count))
        half_count_bit = 1 + int(log10(half_count))

	    if (sampleZ_DEBUG) {
            print(sprintf("max_count is %d", max_count))
            print(sprintf("max_count_bit is %d", max_count_bit))
            print(sprintf("half_count is %d", half_count))
            print(sprintf("half_count_bit is %d", half_count_bit))
        }
	

        j = half_count_bit - 2
        lo_lmt = int(half_count/exp10(j))*exp10(j)
        hi_lmt = lo_lmt + exp10(j)

	    if (sampleZ_DEBUG) {
            print(sprintf("lo_lmt is %d", lo_lmt))
            print(sprintf("hi_lmt is %d", hi_lmt))
        }
        

        if (sampleZ_COUNT < lo_lmt) {
                rtn = -1
        } else if (sampleZ_COUNT <= hi_lmt) {
                rtn = 0        
        } else {
                rtn = 1
        }
        return rtn
}'

def _sampleZ_ct '
        ct 0.1
        
        sampleZ_PRS_COUNT=sampleZ_COUNT
        
        sampleZ_COUNT=S[2]*10
        
        if (sampleZ_COUNT > sampleZ_MAX_COUNT) {
               sampleZ_MAX_COUNT=sampleZ_COUNT
        }
'

def _sampleZ_mvdown '
        local _step
        _step = 0 - sampleZ_STEP
        umvr sampleZ_mne _step
        waitmove
'

def _sampleZ_mvup '
        local _step
        _step = sampleZ_STEP
        umvr sampleZ_mne _step
        waitmove
'

def _sampleZ_count_isEqual() '{
       local prs_count, prt_count, count_bit, ct_precision
       
       prs_count = sampleZ_PRS_COUNT
#       print(prs_count)
       prt_count = sampleZ_COUNT
 #      print(prt_count)
       ct_precision = sampleZ_PRECISION
#       print(ct_precision)
       
       count_bit = 1 + int(log10(prt_count))
 #      print(count_bit)
 #      print("\n")
       
       prs_count = int(prs_count/exp10(count_bit-2))*exp10(count_bit-2)
       prt_count = int(prt_count/exp10(count_bit-2))*exp10(count_bit-2)
       print(prs_count)
       print(prt_count)
       
       if (fabs(prs_count-prt_count) <= sampleZ_PRECISION * exp10(count_bit-2)) {
              print("equal")
              rtn = 1
       } else {
              print("not equal")
              rtn = 0
       }
       
       return rtn
}'

def _sampleZ_count_isZero() '{
        local count_bit, ct_precision, prt_count
        
        prt_count = sampleZ_COUNT
        ct_precision = sampleZ_PRECISION
        count_bit = 1 + int(log10(prt_count))
        
        prt_count = int(prt_count/exp10(ct_precision))*exp10(ct_precision)
        
        if (prt_count == 0) {
              rtn = 1
       } else {
              rtn = 0
       }
       
       return rtn
}'

constant _sampleZ_mv_dict = [0:0.1, 1:0.05, 2:0.02, 3:0.01, 4:0.005]

def _sampleZ_adjust_step '
       local _flags
       
       _flags = $1
       
       if (_flags&0x01) {
              sampleZ_STEP_MASK=0
       } else if (_flags&0x02) {
              if (sampleZ_STEP_MASK > 0) {
                     sampleZ_STEP_MASK-=1
              }
       } else if (_flags&0x04) {
              if (sampleZ_STEP_MASK < 4) {
                     sampleZ_STEP_MASK+=1
              }
       }
       sampleZ_STEP = _sampleZ_mv_dict[sampleZ_STEP_MASK]
'


def sampleZ_assign '
       local loop_time
       local tmp

       #_sampleZ_adjust_step 0x01
       
       if(yesno("Loop 1?", 1)) {
	   while(1) {
	      p "count"
              _sampleZ_ct
              if ( _sampleZ_count_isZero() ) {
                     _sampleZ_mvdown; continue;
              }
              else {
                     break;
              }
	   }
	} else {
	   exit
	}
	
	if (yesno("Loop 2?", 1)) {
	   while(1) {
	          _sampleZ_adjust_step 0x02
	          _sampleZ_mvdown
	          _sampleZ_ct
	          if ( _sampleZ_count_isEqual()) {
	                 break;
	          }
	          else {
	                 continue;
	          }
	   }
	 } else {
	   exit
	 }

	 if(yesno("Loop 3?", 1)) {
	   while (1) {
	          _sampleZ_mvup
	          _sampleZ_ct
	          tmp = _sampleZ_count_isHalf()
#	          print(tmp)
#	          wm sampleZ_mne
	          if (tmp == 0) {
	                 break
	          } else if (tmp > 0) {
	                 _sampleZ_adjust_step 0x04
	                 continue
	          } else {
	                 _sampleZ_mvdown
	                 continue
	          } 
	   }
	   } else {
	       exit
	   }
'
"""
def sampleZ_config '
'
"""
